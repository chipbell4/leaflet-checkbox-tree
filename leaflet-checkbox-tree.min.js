L.Control.CheckboxTree=L.Control.extend({initialize:function(options){L.Util.setOptions(this,options)},onAdd:function(map){var container=L.DomUtil.create("div","leaflet-control leaflet-bar checkbox-tree topright");var onChange=function(){L.Control.CheckboxTree.emitChange(container,this.options.onChange)}.bind(this);var items=this.options.items||{};var keys=Object.keys(items);var N=keys.length;for(var i=0;i<N;i++){L.Control.CheckboxTree.stubParentRow({text:keys[i],id:keys[i],container:container,onChange:onChange,children:items[keys[i]]})}container.addEventListener("mouseover",function(){map.dragging.disable()});container.addEventListener("mouseout",function(){map.dragging.enable()});L.DomEvent.on(container,"mousewheel",L.DomEvent.stopPropagation);L.DomEvent.on(container,"dblclick",L.DomEvent.stopPropagation);return container}});(function(){L.Control.CheckboxTree.stubParentRow=function(options){options.id=options.id||"";options.onChange=options.onChange||function(){};options.text=options.text||"";options.children=options.children||[];options.container=options.container||null;var className="parent-row";if(options.children.length===0){className+=" no-children"}var row=L.DomUtil.create("div",className,options.container);row.id=options.id;var arrow=L.DomUtil.create("span","arrow",row);if(options.children.length>0){arrow.addEventListener("click",L.Control.CheckboxTree.toggleArrow.bind(this,row))}var label=L.DomUtil.create("label","",row);var onChecked=function(evt){L.Control.CheckboxTree.setAllCheckedState(row,evt.target.checked);options.onChange()};var checkbox=L.DomUtil.create("input","",label);checkbox.type="checkbox";checkbox.addEventListener("click",onChecked);var text=L.DomUtil.create("span","",label);text.innerText=options.text;var onChildClick=function(){options.onChange();var checkedState=L.Control.CheckboxTree.determineCheckedState(row);checkbox.indeterminate=checkedState.uncheckedItems.length!==0&&checkedState.checkedItems.length!==0;checkbox.checked=checkedState.uncheckedItems.length===0};var N=options.children.length;if(N===0){return row}var childrenContainer=L.DomUtil.create("ul","",row);for(var i=0;i<N;i++){L.Control.CheckboxTree.stubChildRow({container:childrenContainer,text:options.children[i],onClick:onChildClick})}return row}})();(function(){L.Control.CheckboxTree.stubChildRow=function(options){options.container=options.container||null;options.text=options.text||"";options.onClick=options.onClick||function(){};var listElement=L.DomUtil.create("li","child-row",options.container);var label=L.DomUtil.create("label","",listElement);var checkbox=L.DomUtil.create("input","",label);checkbox.type="checkbox";checkbox.addEventListener("click",options.onClick);var text=L.DomUtil.create("span","",label);text.innerText=options.text;return listElement}})();(function(){L.Control.CheckboxTree.toggleArrow=function(parentRow){if(parentRow.className.indexOf("expanded")==-1){parentRow.className+=" expanded";return}parentRow.className="parent-row"}})();(function(){L.Control.CheckboxTree.setAllCheckedState=function(container,newValue){var inputs=container.getElementsByTagName("input");for(var k in inputs){inputs[k].checked=newValue}}})();(function(){L.Control.CheckboxTree.determineCheckedState=function(container){var k,N,checkbox;var li=container.getElementsByTagName("li");var uncheckedItems=[];var checkedItems=[];N=li.length;for(k=0;k<N;k++){checkbox=li[k].firstChild.firstChild;if(checkbox.checked){checkedItems.push(checkbox.nextSibling.textContent)}else{uncheckedItems.push(checkbox.nextSibling.textContent)}}var rows=container.getElementsByClassName("no-children");N=rows.length;for(k=0;k<N;k++){checkbox=rows[k].getElementsByTagName("input")[0];if(checkbox.checked){checkedItems.push(checkbox.nextSibling.textContent)}else{uncheckedItems.push(checkbox.nextSibling.textContent)}}return{checkedItems:checkedItems,uncheckedItems:uncheckedItems}}})();(function(){L.Control.CheckboxTree.emitChange=function(container,listener){if(!listener){return}var evt=L.Control.CheckboxTree.determineCheckedState(container);evt.target=container;listener(evt)}})();